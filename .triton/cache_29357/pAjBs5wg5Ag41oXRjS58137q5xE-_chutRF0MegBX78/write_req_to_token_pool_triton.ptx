//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	write_req_to_token_pool_triton // -- Begin function write_req_to_token_pool_triton
                                        // @write_req_to_token_pool_triton
.visible .entry write_req_to_token_pool_triton(
	.param .u64 .ptr .global .align 1 write_req_to_token_pool_triton_param_0,
	.param .u64 .ptr .global .align 1 write_req_to_token_pool_triton_param_1,
	.param .u64 .ptr .global .align 1 write_req_to_token_pool_triton_param_2,
	.param .u64 .ptr .global .align 1 write_req_to_token_pool_triton_param_3,
	.param .u64 .ptr .global .align 1 write_req_to_token_pool_triton_param_4,
	.param .u64 .ptr .global .align 1 write_req_to_token_pool_triton_param_5
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<17>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<79>;
$L__func_begin0:

// %bb.0:
	.loc	1 1779 24                       // schedule_batch.py:1779:24
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	ld.param.u64 	%rd36, [write_req_to_token_pool_triton_param_1];
	ld.param.u64 	%rd37, [write_req_to_token_pool_triton_param_2];
	.loc	1 1781 48                       // schedule_batch.py:1781:48
	mul.wide.s32 	%rd38, %r2, 8;
	add.s64 	%rd30, %rd36, %rd38;
	ld.param.u64 	%rd39, [write_req_to_token_pool_triton_param_3];
	mov.pred 	%p1, -1;
	.loc	1 1781 29                       // schedule_batch.py:1781:29
	// begin inline asm
	mov.u64 %rd29, 0x0;
	@%p1 ld.global.b64 { %rd29 }, [ %rd30 + 0 ];
	// end inline asm
	.loc	1 1782 33                       // schedule_batch.py:1782:33
	add.s64 	%rd32, %rd37, %rd38;
	.loc	1 1782 22                       // schedule_batch.py:1782:22
	// begin inline asm
	mov.u64 %rd31, 0x0;
	@%p1 ld.global.b64 { %rd31 }, [ %rd32 + 0 ];
	// end inline asm
	.loc	1 1783 33                       // schedule_batch.py:1783:33
	add.s64 	%rd34, %rd39, %rd38;
	.loc	1 1783 22                       // schedule_batch.py:1783:22
	// begin inline asm
	mov.u64 %rd33, 0x0;
	@%p1 ld.global.b64 { %rd33 }, [ %rd34 + 0 ];
	// end inline asm
	.loc	1 1787 19                       // schedule_batch.py:1787:19
	setp.lt.s32 	%p4, %r2, 1;
	mov.u64 	%rd74, 0;
	@%p4 bra 	$L__BB0_3;
// %bb.1:                               // %.lr.ph.preheader
	.loc	1 0 19                          // schedule_batch.py:0:19
	ld.param.u64 	%rd71, [write_req_to_token_pool_triton_param_4];
	.loc	1 1787 19                       // schedule_batch.py:1787:19
	cvt.u64.u32 	%rd72, %r2;
	mov.u64 	%rd74, 0;
$L__BB0_2:                              // %.lr.ph
                                        // =>This Inner Loop Header: Depth=1
	.loc	1 1788 32                       // schedule_batch.py:1788:32
	// begin inline asm
	mov.u64 %rd41, 0x0;
	@%p1 ld.global.b64 { %rd41 }, [ %rd71 + 0 ];
	// end inline asm
	.loc	1 1788 24                       // schedule_batch.py:1788:24
	add.s64 	%rd74, %rd41, %rd74;
	.loc	1 1787 19                       // schedule_batch.py:1787:19
	add.s64 	%rd72, %rd72, -1;
	add.s64 	%rd71, %rd71, 8;
	setp.ne.s64 	%p6, %rd72, 0;
	@%p6 bra 	$L__BB0_2;
$L__BB0_3:                              // %._crit_edge
	.loc	1 1790 33                       // schedule_batch.py:1790:33
	sub.s64 	%rd12, %rd33, %rd31;
$L__tmp0:
	.loc	2 40 22                         // standard.py:40:22
	add.s64 	%rd43, %rd12, 511;
$L__tmp1:
	.loc	1 1791 19                       // schedule_batch.py:1791:19
	setp.lt.s64 	%p7, %rd43, 512;
	@%p7 bra 	$L__BB0_6;
// %bb.4:                               // %.lr.ph9.preheader
	.loc	1 0 19                          // schedule_batch.py:0:19
	ld.param.u64 	%rd28, [write_req_to_token_pool_triton_param_5];
	ld.param.u64 	%rd26, [write_req_to_token_pool_triton_param_0];
	shr.s64 	%rd44, %rd43, 63;
	shr.u64 	%rd45, %rd44, 55;
	add.s64 	%rd46, %rd43, %rd45;
	shr.s64 	%rd78, %rd46, 9;
	mov.u32 	%r3, %tid.x;
	and.b32  	%r4, %r3, 127;
	cvt.u64.u32 	%rd75, %r4;
	mul.lo.s64 	%rd15, %rd29, 131088;
	.loc	1 1791 19                       // schedule_batch.py:1791:19
	shl.b64 	%rd47, %rd31, 2;
	add.s64 	%rd48, %rd15, %rd47;
	shl.b64 	%rd49, %rd75, 2;
	add.s64 	%rd50, %rd48, %rd49;
	add.s64 	%rd51, %rd50, %rd26;
	add.s64 	%rd77, %rd51, 1536;
	shl.b64 	%rd52, %rd74, 3;
	shl.b64 	%rd53, %rd75, 3;
	add.s64 	%rd54, %rd52, %rd53;
	add.s64 	%rd55, %rd54, %rd28;
	add.s64 	%rd76, %rd55, 3072;
$L__BB0_5:                              // %.lr.ph9
                                        // =>This Inner Loop Header: Depth=1
	.loc	1 1792 44                       // schedule_batch.py:1792:44
	add.s64 	%rd68, %rd75, 128;
	add.s64 	%rd69, %rd75, 256;
	.loc	1 1793 25                       // schedule_batch.py:1793:25
	add.s64 	%rd70, %rd75, 384;
	setp.lt.s64 	%p8, %rd75, %rd12;
	setp.lt.s64 	%p9, %rd68, %rd12;
	setp.lt.s64 	%p10, %rd69, %rd12;
	setp.lt.s64 	%p11, %rd70, %rd12;
	add.s64 	%rd57, %rd76, -3072;
	.loc	1 1794 55                       // schedule_batch.py:1794:55
	add.s64 	%rd59, %rd76, -2048;
	add.s64 	%rd61, %rd76, -1024;
	.loc	1 1794 24                       // schedule_batch.py:1794:24
	// begin inline asm
	mov.u64 %rd56, 0x0;
	@%p8 ld.global.b64 { %rd56 }, [ %rd57 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd58, 0x0;
	@%p9 ld.global.b64 { %rd58 }, [ %rd59 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd60, 0x0;
	@%p10 ld.global.b64 { %rd60 }, [ %rd61 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd62, 0x0;
	@%p11 ld.global.b64 { %rd62 }, [ %rd76 + 0 ];
	// end inline asm
	.loc	1 0 0                           // schedule_batch.py:0:0
	add.s64 	%rd64, %rd77, -1536;
	add.s64 	%rd65, %rd77, -1024;
	add.s64 	%rd66, %rd77, -512;
	.loc	1 1800 12                       // schedule_batch.py:1800:12
	cvt.u32.u64 	%r5, %rd56;
	cvt.u32.u64 	%r6, %rd58;
	cvt.u32.u64 	%r7, %rd60;
	cvt.u32.u64 	%r8, %rd62;
	// begin inline asm
	@%p8 st.global.b32 [ %rd64 + 0 ], { %r5 };
	// end inline asm
	// begin inline asm
	@%p9 st.global.b32 [ %rd65 + 0 ], { %r6 };
	// end inline asm
	// begin inline asm
	@%p10 st.global.b32 [ %rd66 + 0 ], { %r7 };
	// end inline asm
	// begin inline asm
	@%p11 st.global.b32 [ %rd77 + 0 ], { %r8 };
	// end inline asm
	.loc	1 1791 19                       // schedule_batch.py:1791:19
	add.s64 	%rd78, %rd78, -1;
	add.s64 	%rd77, %rd77, 2048;
	add.s64 	%rd76, %rd76, 4096;
	add.s64 	%rd75, %rd75, 512;
	setp.ne.s64 	%p16, %rd78, 0;
	@%p16 bra 	$L__BB0_5;
$L__BB0_6:                              // %._crit_edge10
	.loc	1 1791 4                        // schedule_batch.py:1791:4
	ret;
$L__tmp2:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/usr/local/lib/python3.10/dist-packages/sglang/srt/managers/schedule_batch.py"
	.file	2 "/usr/local/lib/python3.10/dist-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 5                                   // DW_FORM_data2
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 180                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xad DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 115                                 // DW_AT_name
.b8 99
.b8 104
.b8 101
.b8 100
.b8 117
.b8 108
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 117
.b8 115
.b8 114
.b8 47
.b8 108
.b8 111
.b8 99
.b8 97
.b8 108
.b8 47
.b8 108
.b8 105
.b8 98
.b8 47
.b8 112
.b8 121
.b8 116
.b8 104
.b8 111
.b8 110
.b8 51
.b8 46
.b8 49
.b8 48
.b8 47
.b8 100
.b8 105
.b8 115
.b8 116
.b8 45
.b8 112
.b8 97
.b8 99
.b8 107
.b8 97
.b8 103
.b8 101
.b8 115
.b8 47
.b8 115
.b8 103
.b8 108
.b8 97
.b8 110
.b8 103
.b8 47
.b8 115
.b8 114
.b8 116
.b8 47
.b8 109
.b8 97
.b8 110
.b8 97
.b8 103
.b8 101
.b8 114
.b8 115
.b8 0
.b8 2                                   // Abbrev [2] 0x67:0x21 DW_TAG_subprogram
.b8 119                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 101
.b8 95
.b8 114
.b8 101
.b8 113
.b8 95
.b8 116
.b8 111
.b8 95
.b8 116
.b8 111
.b8 107
.b8 101
.b8 110
.b8 95
.b8 112
.b8 111
.b8 111
.b8 108
.b8 95
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x88:0x2f DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 103                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9d:0x19 DW_TAG_inlined_subroutine
.b32 103                                // DW_AT_abstract_origin
.b64 $L__tmp0                           // DW_AT_low_pc
.b64 $L__tmp1                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 254                                 // DW_AT_call_line
.b8 6
.b8 42                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
